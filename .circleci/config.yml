version: 2.1
orbs:
  docker: circleci/docker@1.4.0
aliases:
 - &filter_only_master
     branches:
       only:
         - /^master$/
jobs:
  run_tests:
    docker:
      - image: deriv/dzil:latest
        entrypoint: /bin/bash
    steps:
      - checkout
      - run:
          name: Prepare environment
          command: |
            perl -MConfig -le'print "$_=$Config{$_}" for sort keys %Config' > /opt/perl.config
      - restore_cache:
          keys:
            - cpanfile-{{ arch }}-{{ checksum "/opt/perl.config" }}-{{ checksum "cpanfile" }}
      - run:
          name: Install deps
          command: |
            cpanm -l deps --installdeps --with-develop -n .
      - save_cache:
          key: cpanfile-{{ arch }}-{{ checksum "/opt/perl.config" }}-{{ checksum "cpanfile" }}
          paths:
            - deps
      - run:
          name: Run test
          command: |
            export PERL5LIB=$(pwd)/deps/lib/perl5:$(pwd)/deps/lib/perl5/$(perl -MConfig -le'print $Config{archname}'):$PERL5LIB
            dzil test
      - run:
          name: Author tests
          command: |
            export PERL5LIB=$(pwd)/deps/lib/perl5:$(pwd)/deps/lib/perl5/$(perl -MConfig -le'print $Config{archname}'):$PERL5LIB
            dzil xtest

  coverage:
    docker:
      - image: deriv/dzil:latest
        entrypoint: /bin/bash
    steps:
      - checkout
      - run:
          name: Prepare environment
          command: |
            perl -MConfig -le'print "$_=$Config{$_}" for sort keys %Config' > /opt/perl.config
      - restore_cache:
          keys:
            - cpanfile-{{ arch }}-{{ checksum "/opt/perl.config" }}-{{ checksum "cpanfile" }}
      - run:
          name: Install deps
          command: |
              cpanm -l deps --installdeps --with-develop -n .
      - run:
          name: Coverage
          command: |
              export PERL5LIB=$(pwd)/deps/lib/perl5:$(pwd)/deps/lib/perl5/$(perl -MConfig -le'print $Config{archname}'):$PERL5LIB
              export PATH=$(pwd)/deps/bin:$PATH
              # We don't care about failures here: those are handled by the main tests, we just want the report
              dzil run cover -test -report coveralls || :
  
workflows:
  version: 2
  build-workflow:
    jobs:
      - run_tests
  merged:
    jobs:
      - run_tests:
          context: perl
          filters: *filter_only_master
      - coverage:
          filters: *filter_only_master
